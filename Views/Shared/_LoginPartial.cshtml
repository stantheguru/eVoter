@using Microsoft.AspNetCore.Identity
@using eVoter.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@using Microsoft.Data.SqlClient;

@{
    string name = "Jane Doe";
    string id = UserManager.GetUserId(User);


    string connectionString = "Server=DESKTOP-OFRUC79;Database=eVoter;Trusted_Connection=True;";  // typically, you get this from a config file

    string names = "select FirstName,LastName from dbo.AspNetUsers  WHERE Id='" + id + "';";
    SqlConnection conn = new SqlConnection(connectionString);

    SqlCommand sqlCommandName = new SqlCommand(names, conn);


    {
        // open connection, execute query, close connection
        conn.Open();
        SqlDataReader reader = sqlCommandName.ExecuteReader();

        while (reader.Read())
        {

            if (reader[0].GetType() != typeof(DBNull))
            {
                name = (string)reader[0]+" "+(string)reader[1];
            }

        }
    }

}




<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @name</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
